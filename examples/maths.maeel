proc sqrt do
    let output 1 0

    true while do
        swap
        dup output /
        output + 2
        / let sqrt_value pop
        swap 1 +

        dup 30 = !
    end

    pop pop
    output
end


proc fac do
    let n pop
    n 1 = let comp pop
    comp if do n end
    comp! if do n dup 1 - fac * end
end


proc pow do
    let pow_number pop
    let pow_exponent pop

    1  @ output
    0  @ ammount of iterations (0 <= pow_exponents)

    true while do
        swap pow_number * swap 1 + dup
        pow_exponent = !
    end

    pop
end
