proc assert do
    let msg pop
    let cond pop

    msg print pop ": " print pop

    cond if do
        "OK\n" print pop
    end

    cond !if do
        "FAIL\n" print pop
    end
end

(false !) (true =) "not(false)" assert
(true !) (false =) "not(true)" assert

(true false +) (true =) "true OR false" assert
(false true +) (true =) "false OR true" assert
(false false +) (false =) "false OR false" assert
(true true +) (true =) "true OR true" assert
(true false *) (false =) "true AND false" assert
(false true *) (false =) "false AND true" assert
(false false *) (false =) "false AND false" assert
(true true *) (true =) "true AND true" assert
