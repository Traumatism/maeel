"std" include

fun match (
    swap -> v
    {} swap for (
        dup first swap second -> f v = => (f+)
    )
    dup null => ("Unknown case!" panic)
    dup 0 swap for (drop inc)
    dec get
)

fun inline map ({} rot swap for (over! rot rot+ swap) drop)

fun filter p ({} -> xs for (dup p! => (xs swap + -> xs)) xs)

fun reduce fn init (init swap for (swap fn!))
