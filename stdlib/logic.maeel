"stack" include
"array" include

λ match [] (
    swap @value {} swap Ω (
        dup first swap second @fn value = ⇒ (fn +)
    )

    last
)

λ xor [a b] (
    {a b} {
        {{α α} β} {{β β} β}
        {{β α} α} {{α β} α}
    } match
)

λ and [a b] (
    {a b} {
        {{α α} α} {{β β} β}
        {{β α} β} {{α β} β}
    } match
)

λ or [a b] (
    {a b} {
        {{α α} α} {{β β} β}
        {{β α} α} {{α β} α}
    } match
)

λ not [a] (a {{α β} {β α}} match)

λ then [val fn] (val ⇒ (fn&))
