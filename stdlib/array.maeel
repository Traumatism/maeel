"std" include
"stack" include

| Get the last element of an array
λ last [xs] (xs xs len 1- Γ)

| Get the first element of an array
λ first [xs] (xs 0 Γ)

| Get how many times an element appears in an array
λ count [xs element] ({ (element = ⇒ (1)) (xs) } sum)

| Apply fn(x) for each x of xs
λ map [xs fn] ({ (fn&) (xs) })

| Check if an array contains an element
λ contains [xs element] (
    0→i β α ω (xs i Γ element = ⇒ (α) i 1 + →i i xs len <)
)

| Take n elements from the stack and put them into an array
λ take [n] (
    ∅→xs
    0 dup n < ω (swap xs + → xs 1+ dup n <)
    xs reverse
)

| Returns the length of an array.
λ len [] (0 swap Ω(drop 1+))

| Returns an array of arrays with {idx element}.
λ enumerate [] (0→i ∅ swap Ω(i 1 take + 1 take + i 1+ →i))

| Returns a reversed copy of an array.
λ reverse [xs] (∅→ys xs len dup 1 gteq ω(1- dup xs swap Γ ys+ →ys dup 1 gteq) ys)

| Push an element at the begin of an array.
λ push [xs element] (element 1 take xs Ω(+))

| Split an array and its first element.
λ pop [xs] (
    ∅→ys
    xs len→xs_len
    xs 0Γ1 take →first_element
    1 dup xs_len< ω(xs over Γ ys+ →ys 1+ dup xs_len <)
    first_element ys 1 take +
)
