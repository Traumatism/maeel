fun inline print (dup puts)

fun inline println (print "\n" puts)

fun inline putsln (puts "\n" puts)

fun inline drop __ ()

fun inline dup __a (__a __a)

fun inline rot __a __b __c (__c __a __b)

fun inline swap __a __b (__b __a)

fun inline over __a __b (__a __b __a)

fun inline true ((drop))

fun inline false ((swap drop))

fun inline ifelse (rot rot!!)

fun inline then (() ifelse)

fun inline bool_to_string (("true") ("false") ifelse)

fun inline bool_to_int ((1) (0) ifelse)

fun inline neg (0 swap -)

fun inline not ((false) (true) ifelse)

fun mod a b (
    a 0 < ((a b +: a) (a 0 <) while) then
    (a b -: a) (a b > a b = or) while
    a
)

fun and p q (
    1 0 p! 1=
	(1 0 q! 1= (true) (false) ifelse)
	(false)
    ifelse
)

fun or p q (
    1 0 p! 1=
	(true)
	(1 0 q! 1= (true) (false) ifelse)
    ifelse
)

fun inline while __while_fn __pr (__pr! (__while_fn! __while_fn __pr while) then)

fun inline for __xs __for_fn (
    __xs len :__xs_len 0 :__idx
    (__xs __idx get __for_fn! __idx 1+ :__idx) (__idx __xs_len <)
    while
)

fun take1 (list+)

fun take2 (list++)

fun take3 (list+++)

fun inline List ("__maeel_list_start")

fun inline end2 (list (+) (over List= not) while swap drop)

fun inline reverse (List swap () for end2)

fun inline end (list (+) (over List= not) while swap drop reverse)

fun map xs fn (
    List
	xs (fn!) for
    end
)

fun range a b (
    List
	a (dup 1+) (dup b<) while
    end
)

fun inline unpack (
    fun inline unpack_aux (
	dup 0= (get) (
	    over over get rot 1- unpack_aux
	) ifelse
    )

    dup len 1- unpack_aux
)

